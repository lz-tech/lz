public with sharing class calendarV3Controller {
    
    public List<AttackList__c> targetAttackLists {get; set;}
    public Integer rowCount {get; private set;}

    public string targetType {get; set;}
    public List<SelectOption> targetTypeOptions {get; private set;}
    public List<Task> tasks {get; set;}

    public KatudoYoteiDto yoDto {get; set;}

    public calendarV3Controller() {
        String targetMonth = DateTime.now().format('yyyyMM');
        targetAttackLists = [Select id,name from AttackList__c where attackYerMonth__c = :targetMonth and RecordType.name = '車販活動'];
        rowCount = targetAttackLists.size();

        List<Id> targetAttackListIds = new List<Id>();
        for (AttackList__c attack: targetAttackLists) {
            targetAttackListIds.add(attack.id);
        }

        List<Task> yoteiariTasks = [Select id from Task where IsClosed = false and summaryFlg__c = true and targetAttacklist__c = :targetAttackListIds];
        // 予定のあるアタックリストの場合の制御(特になし)
        

        initSelectOptions();
        yoDto = new KatudoYoteiDto();
        system.debug('calendarV3Controller');

        // 基準日
        Date tDay = Date.today();
        Date fromDay = Date.newInstance(tDay.year(), tDay.month(), 1);
        Date toDay = Date.newInstance(tDay.year(), tDay.month() + 1, 0);
        tasks = [Select id, Subject, targetAttacklist__c,ActivityDate from task where ActivityDate >= :fromDay and ActivityDate <=:toDay];
        for (Task task: tasks) {
            if (task.targetAttacklist__c != null) {
                task.Subject = '★' + task.Subject;
            }
        }
        
    }

    private void initSelectOptions() {
        targetTypeOptions = new List<SelectOption>();
        targetTypeOptions.add(new SelectOption('車販活動','車販活動'));
        targetTypeOptions.add(new SelectOption('誘致活動','誘致活動'));
        targetTypeOptions.add(new SelectOption('その他活動','その他活動'));
    }

    public void insertYotei() {
        try {
            String yoId = Apexpages.currentPage().getParameters().get('yoId');
            String yoTdate = Apexpages.currentPage().getParameters().get('yoTdate');
            String yoStime = Apexpages.currentPage().getParameters().get('yoStime');
            String yoEtime = Apexpages.currentPage().getParameters().get('yoEtime');
            String yoFSatei = Apexpages.currentPage().getParameters().get('yoFSatei');
            String yoFRaiten = Apexpages.currentPage().getParameters().get('yoFRaiten');
            system.debug(Apexpages.currentPage().getParameters());

            List<AttackList__c> attacks = [select id,name,targetOpportunity__c, targetContact__c from AttackList__c where id=:yoId];
            AttackList__c attack = attacks[0];
            Task task = new Task();
            task.Subject = attack.name + '活動';
            //task.AccountId = attack.targetContact__c;
            task.ActivityDate = (date.today()).addDays(7);
            task.summaryFlg__c = true;
            task.targetAttacklist__c = attack.id;
            task.WhatId = attack.targetOpportunity__c;
            task.StartDate__c = (datetime.now()).addDays(7);
            task.endDate__c = (datetime.now()).addDays(7).addHours(1);
            task.yoSateiFlg__c = Boolean.valueOf(yoFSatei);
            task.yoRaitenFlg__c = Boolean.valueOf(yoFRaiten);
            insert task;
            system.debug(task);
        } catch(Exception ex) {
            System.debug(System.Logginglevel.ERROR, '例外情報：');
            System.debug(System.Logginglevel.ERROR, 'Type: ' + ex.getTypeName());
            System.debug(System.Logginglevel.ERROR, 'Message: ' + ex.getMessage());
            System.debug(System.Logginglevel.ERROR, 'Stack trace: ' + ex.getStackTraceString());
        }

    }

    public void saveKekka() {
        try {
            String keId = Apexpages.currentPage().getParameters().get('keId');
            String keEnd = Apexpages.currentPage().getParameters().get('keEnd');
            String keSatei = Apexpages.currentPage().getParameters().get('keSatei');
            String keRaiten = Apexpages.currentPage().getParameters().get('keRaiten');
            String keMemo = Apexpages.currentPage().getParameters().get('keMemo');
            String keJikai = Apexpages.currentPage().getParameters().get('keJikai');
            system.debug(Apexpages.currentPage().getParameters());

            List<Task> tasks = [Select id,targetAttacklist__c, targetAttacklist__r.targetOpportunity__c from Task where id = :keId];
            Task task = tasks[0];

            boolean keSateiFlg = Boolean.valueOf(keSatei);
            boolean keRaitenFlg = Boolean.valueOf(keRaiten);
            task.jiSateiFlg__c = keSateiFlg;
            task.jiRaitenFlg__c = keRaitenFlg;
            if (Boolean.valueOf(keEnd)) {
                task.Status = 'Completed';
            }
            task.Description = keMemo;
            update(task);
            system.debug(task);

            AttackList__c attack = new AttackList__c();
            attack.id = task.targetAttacklist__c;
            if (keSateiFlg) {
                attack.satei__c = true;
            }
            if (keSateiFlg) {
                attack.raiten__c = true;
            }
            attack.memo__c = keMemo;
            update attack;


        } catch(Exception ex) {
            System.debug(System.Logginglevel.ERROR, '例外情報：');
            System.debug(System.Logginglevel.ERROR, 'Type: ' + ex.getTypeName());
            System.debug(System.Logginglevel.ERROR, 'Message: ' + ex.getMessage());
            System.debug(System.Logginglevel.ERROR, 'Stack trace: ' + ex.getStackTraceString());
        }
    }

}